/* Estilos Gerais */

body {
  font-family: Arial, Helvetica, sans-serif;
  margin: 40px;
}

h1,
p {
  margin: 0px;
}

img {
  max-width: 100%;
  border-radius: 4px;
}

h1 {
  font-size: 48px;
  line-height: 1;
}

p {
  font-size: 20px;
}

.comprar {
  background: #a8f;
  color: #103;
  padding: 10px 20px;
  text-decoration: none;
  border-radius: 4px;
  font-size: 20px;
}

/* Estilos do Grid */

.grid {
  /* Ao definirmos o "display: grid", todos os elementos do Grid passam a se tornar "grid items". Basicamente, o width deles tentam se expandir por 100% do container. */

  display: grid;

  gap: 20px;

  grid-template-columns: 1fr 1fr;

  /* O "align-items" sempre alinhará os itens de dentro do grid no eixo Y. O elemento que definirá o alinhamento central será sempre o maior elemento da linha.*/

  /* O "justify-items" sempre alinhará os itens de dentro do grid no eixo X. */

  /* O "place-items" é a junção do "align-items" com o "justify-items" em apenas uma propriedade. */

  /* As propriedades "align-items", "justify-items" e "place-items" afetarão todos os itens dentro de um grid. */

  align-items: center;
}

.preco {
  background: #ddd;
  padding: 5px 10px;
  border-radius: 4px;

  place-self: start end;
}

.comprar {
  /* O "align-self" deve ser utilizado nos próprios itens que precisam ser alinhados. (não entendo muito, rever aula). */

  align-self: start;
}

.foto {
  /* A propriedade "grid-column" serve para definirmos o posicionamento da foto dentro do Grid. */

  /* Se definirmos o "grid-column: 1 / 3", ela expandirá da coluna "1" até a coluna "3" do Grid. Essas colunas poderão ser vistas no DevTools. */
  grid-column: 1 / 3;
}
